============
NGS pipeline
============


Characteristics
===============

The MDL NGS analysis pipeline is an analysis system based on Python scripts that wrap different external open-source tools. Following clinical, diagnostic and research guidelines the pipeline uses, presently, two variant callers to produce results on mutations present in patients' NGS samples.

The pipeline is being developed to work with TruSight Cancer+ panel of 104 cancer-related genes. This panel takes advantage of MiSeq and NextSeq instruments to generate millions of reads for up to 24 samples. The list of genes in the panel and sub-panels can be found here: :doc:`genes`.

At the moment the Python section of the pipeline is composed of 35 scripts that call external applications (list can be found here: :doc:`applications`)

Technical information
=====================

Requirements
------------

 MDL's NGS pipeline requires (for now) Python 3.x.x and any operating system that Python and the third-party tools works natively. Due mainly to the latter, the pipeline might only work on Unix-like systems, Linux, Solaris or OS X, provided that the external apps can be compiled. Currently, the scripts and other apps were tested on 

* OS X

* Debian 7

* RHEL

Compilation of Platypus could not be completed on RHEL.

Python modules required to run the pipeline properly are:


* `numpy`_  version 1.15.4

* `bokeh`_  version 1.2.0

* `pysam`_  version 0.15.1

* `matplotlib`_  version 2.2.3

* `holoviews`_  version 1.10.9

* `rpy2`_  version 2.9.4

* `pandas`_  version 0.23.4

* `setuptools`_  version 40.8.0

* `graypy`_  version 1.1.2

* `couchbase`_  version 2.5.1

* `psutil`_  version 5.4.8

* `py2exe`_  version 0.9.2.2

* `requests`_  version 2.20.1

* `watchdog`_  version 0.9.0

* `Jinja2`_  version 2.10

* `colorama`_  version 0.4.0

* `rethinkdb`_  version 2.3.0.post6

* `PyVCF`_  version 0.6.8

* `interop`_  version 1.1.8

* `suds_jurko`_  version 0.6

* `PyYAML`_  version 5.1.2



Python Standard Library module currently used in the pipeline

* `os`_

* `subprocess`_

* `logging`_

* `glob`_

* `sys`_

* `collections`_  - defaultdict

* `string`_ 

There's one main module in the pipeline, ``align.py`` that import submodules that perform the actual analysis, while ``align.py`` works as a task manager. Full module and sub-modules documentation is below. 


Usage
-----

Pipeline usage at the moment is still dependent on command-line options. Two configuration files are required, one with paths for the external tools, another with the run configuration information. The external tool configuration is still under development, and app paths are hard-coded on the scripts. 

The run configuration file has this format::

		Panel: CancerPlus
		Reference: '/opt/reference/hg19.fasta'
		BAIT: '/opt/BED/Inherited_Cancer_panel_FINAL.picard.bed'
		VCF: '/opt/bundle/dbsnp_138.hg19.vcf'
		Datadir: 'Test_dataset'
		FinalDir: Test_dataset
		BED: 
		    19-200-NA12877_PG_9P: /opt/BED/Inherited_Cancer_panel_FINAL.bed
		    <sample id>: /opt/BED/Inherited_Cancer_panel_FINAL.bed
		Gender:
		  - 19-200-NA12877_PG_9P: Female
		  - <sample id>: Female

And the configuration file has been named following the convention

``<Panel_name>_NGS<run_number>.yaml``, i.e. ``CancerPlus_NGS01.yaml``

with the panel name, the reference file, the specific BED file for each sample, BAIT file for Picard coverage output, known VCF file for indel realignment and base recalibration and the data directory where the FASTQ.gz are located. This structure permits that many sub-panels are analyzed at the same time, providing flexibility of sample type and required analysis. Another piece of information required for all samples is their gender, which is used sapecifically for CNV calculation of X-linked genes in the sub-panels.

The pipeline first module, ``align.py``, searches the data directory for compressed FASTQ file pairs (``FASTQ.gz``) and generates the whole analysis. Output is saved in a ``BAM`` directory specified data directory, with results separated in sub-directory named after each sample IDs. 

All commands used in the third-party applications are listed here :doc:`commands_ngs`

Another ``yaml`` file is required to tell the pipeline where to find binary files and executables. This file, named ``programs.yaml`` is required and its absence will generate an error. Its structure is detailed below::

		##################################
		##### Programs ###################
		##################################

		GATK: 'java -jar /usr/local/bin/GATK4.jar'
		GATK3: 'java -jar /usr/local/bin/GenomeAnalysisTK.jar'
		Picard: '/usr/local/bin/picard'
		Freebayes: '/usr/local/bin/freebayes'
		Platypus: '/opt/bin/Platypus_0.8.1/Platypus.py'
		Atlas: 'ruby /opt/Atlas-Indel2/Atlas-Indel2.rb'
		BWA: '/usr/local/bin/BWA'
		Samtools: '/usr/local/bin/samtools'
		Varscan: 'java -jar /opt/varscan-master/VarScan.v2.4.0.jar'
		Bedtools: '/usr/local/bin/bedtools'
		Socrates: 'java -jar /opt/socrates-1.13-jar-with-dependencies.jar'
		Qualimap: '/Applications/Bioinformatics/qualimap/qualimap'
		snpEff: '/usr/local/bin/snpEff'
		ClinEff: 'java -jar /opt/bin/clinEff/ClinEff.jar'
		annovar: '/opt/bin/annovar'
		multiqc: 'multiqc'
		octopus: '/usr/local/bin/octopus'

		##################################
		##### Locations ##################
		##################################

		BED_files: /opt/BED
		full_BED: /opt/BED/Inherited_Cancer_panel_FINAL.bed
		report_location: /Volumes/diagonalley/{{ year }}/Cplus/NGS_test/
		transcripts: /opt/bundle/transcripts.txt
		DB: 192.168.1.169

*(some of the above are deprecated, but kept in the list for legacy and possible future purposes)*

Analysis is started with the following command in a terminal::

	python align.py <location of the run configuration YAML file>


Main output will be generated inside the run directory, and log file is located inside the sub-directory ``log`` inside align.py's directory.

Running the pipeline at GLS North
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section can be found here :doc:`running_north`.

Running the pipeline at GLS South
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section can be found here :doc:`running_south`.

Installation
------------

The pipeline to be used does not need to be installed, as it is a set of connected scripts. But the requirements and third party tools listed above need to be installed/compiled in the host system. 

Python modules
^^^^^^^^^^^^^^

To install Python requirement, `pip`_ needs to be present in the system and the following command can be issued::


	pip install -r requirements.txt

from the directory where ``align.py`` is located (usually ``cancerplus/code/pipeline``). This will install::

	numpy==1.15.4
	bokeh==1.2.0
	pysam==0.15.1
	matplotlib==2.2.3
	holoviews==1.10.9
	rpy2==2.9.4
	pandas==0.23.4
	setuptools==40.8.0
	graypy==1.1.2
	couchbase==2.5.1
	altair==2.2.2
	psutil==5.4.8
	py2exe==0.9.2.2
	requests==2.20.1
	watchdog==0.9.0
	Jinja2==2.10
	colorama==0.4.0
	kafka==1.3.5
	rethinkdb==2.3.0.post6
	PyVCF==0.6.8
	vega_datasets==0.6.0
	interop==1.1.8
	cx_Freeze==5.1.1
	suds_jurko==0.6
	PyYAML==5.1.2

External programs
^^^^^^^^^^^^^^^^^

The pipeline at the moment uses these software to run the analysis:

* `GATK`_
 
* `Picard`_
 
* `Freebayes`_
 
* `BWA`_
 
* `Samtools`_
 
* `Bedtools`_
 
* `Qualimap`_
 
* `snpEff`_

Please follow the installation/compilation instructions on their home page to have the program set in your system.


Result files
------------

This is the list of result files generated by the pipeline::


		├── <sample id>.barcode.txt
		├── <sample id>.cnv
		├── <sample id>.identity_full.txt
		├── <sample id>_final_report.html
		├── <sample id>_table.txt
		├── BAM
		│   ├── <sample id>.bam
		│   ├── <sample id>.bam.bai
		│   ├── <sample id>.dedup.bam
		│   ├── <sample id>.fix.bam
		│   ├── <sample id>.good.bam
		│   ├── <sample id>.good.bam.bai
		│   ├── <sample id>.pos.bam
		│   ├── <sample id>.recal_reads.bai
		│   ├── <sample id>.recal_reads.bam
		│   ├── <sample id>.sort.bam
		│   ├── identity.mpileup
		│   └── recal_data.table
		├── Metrics
		│   ├── <sample id>.align_metrics.out
		│   ├── <sample id>.hs_metrics.out
		│   ├── <sample id>.hs_metrics.panel.out
		│   ├── <sample id>.nucl.out
		│   ├── <sample id>.nucl.panel.out
		│   ├── <sample id>.out
		│   ├── <sample id>.panel.out
		│   └── <sample id>.yield.out
		├── QC
		│   ├── <sample id>_<GENE>.html
		│   ├── <GENE>.png
		├── VCF_<sub panel_code>
		│   ├── <sample id>.avinput
		│   ├── <sample id>.hg19_multianno.txt
		│   ├── <sample id>.hg19_multianno.vcf
		│   ├── <sample id>_GATK.vcf
		│   ├── <sample id>_GATK.vcf.idx
		│   ├── <sample id>_GATK3.vcf
		│   ├── <sample id>_GATK3.vcf.idx
		│   ├── <sample id>_freebayes.final.vcf
		│   ├── <sample id>_freebayes.final.vcf.idx
		│   ├── <sample id>_freebayes.sorted.vcf
		│   ├── <sample id>_freebayes.sorted.vcf.idx
		│   ├── <sample id>_freebayes.vcf
		│   ├── <sample id>_merged.ann.vcf
		│   ├── <sample id>_merged.vcf
		│   ├── <sample id>_merged.vcf.idx
		│   ├── <sample id>_octopus.vcf
		│   └── <sample id>_octopus.vcf.idx
		├── identity.txt
		└── support
		    ├── <chroomosome>_<location>.html
		 


Logging
-------

Logging is being updated.



Code documentation
==================

Code documentation can be found on :doc:`code`

Data management code documentation can be found on :doc:`code_data_mgmt`


Validation
==========

Validation data and information coming soon.

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

.. _illuminate: https://pypi.python.org/pypi/illuminate/
.. _pyyaml: http://pyyaml.org
.. _rethinkdb: https://www.rethinkdb.com/api/python/
.. _os: https://docs.python.org/2/library/os.html
.. _subprocess: https://docs.python.org/2/library/subprocess.html
.. _logging: https://docs.python.org/2/library/logging.html
.. _glob: https://docs.python.org/2/library/glob.html
.. _rpy2: http://rpy2.bitbucket.org
.. _pyvcf: https://pyvcf.readthedocs.io/en/latest/
.. _sys: https://docs.python.org/2/library/sys.html
.. _collections: https://docs.python.org/2/library/collections.html
.. _string: https://docs.python.org/2/library/string.html
.. _pandas: http://pandas.pydata.org
.. _numpy: http://www.numpy.org
.. _jinja2: http://jinja.pocoo.org/docs/dev/
.. _suds: https://fedorahosted.org/suds/
.. _pip: https://pip.pypa.io/en/stable/
.. _pysam: http://pysam.readthedocs.io/en/latest/
.. _GATK: https://software.broadinstitute.org/gatk/
.. _Picard: https://broadinstitute.github.io/picard/
.. _Freebayes: https://github.com/ekg/freebayes
.. _BWA: http://bio-bwa.sourceforge.net
.. _Samtools: https://samtools.github.io
.. _Bedtools: http://bedtools.readthedocs.io
.. _Qualimap: http://qualimap.bioinfo.cipf.es
.. _snpEff: http://snpeff.sourceforge.net
.. _colorama: https://pypi.python.org/pypi/colorama
.. _annovar: http://annovar.openbioinformatics.org/en/latest/
.. _bokeh:
.. _matplotlib:
.. _holoviews:
.. _setuptools:
.. _graypy:
.. _couchbase:
.. _altair:
.. _psutil:
.. _py2exe:
.. _requests:
.. _watchdog:
.. _kafka:
.. _vega_datasets:
.. _interop:
.. _cx_Freeze:
.. _suds_jurko:
